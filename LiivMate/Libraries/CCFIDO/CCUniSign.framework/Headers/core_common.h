//
//  core_common.h
//  FidoApi
//
//  Created by sscho on 2015. 12. 23..
//  Copyright © 2015년 sscho. All rights reserved.
//

#ifndef core_common_h
#define core_common_h

#include <stdbool.h>

//Command Tag
#define TAG_UAFV1_GETINFO_CMD 0x3401
#define TAG_UAFV1_GETINFO_CMD_RESPONSE 0x3601
#define TAG_UAFV1_REGISTER_CMD 0x3402
#define TAG_UAFV1_REGISTER_CMD_RESPONSE 0x3602
#define TAG_UAFV1_SIGN_CMD 0x3403
#define TAG_UAFV1_SIGN_CMD_RESPONSE 0x3603
#define TAG_UAFV1_DEREGISTER_CMD 0x3404
#define TAG_UAFV1_DEREGISTER_CMD_RESPONSE 0x3604
#define TAG_UAFV1_OPEN_SETTINGS_CMD 0x3406
#define TAG_UAFV1_OPEN_SETTINGS_CMD_RESPONSE 0x3606

//Tags used only in Authenticator Commands
#define TAG_KEYHANDLE 0x2801
#define TAG_USERNAME_AND_KEYHANDLE 0x3802
#define TAG_USERVERIFY_TOKEN 0x2803
#define TAG_APPID 0x2804
#define TAG_KEYHANDLE_ACCESS_TOKEN 0x2805
#define TAG_USERNAME 0x2806
#define TAG_ATTESTATION_TYPE 0x2807
#define TAG_STATUS_CODE 0x2808
#define TAG_AUTHENTICATOR_METADATA 0x2809
#define TAG_ASSERTION_SCHEME 0x280A
#define TAG_TC_DISPLAY_PNG_CHARACTERISTICS 0x280B
#define TAG_TC_DISPLAY_CONTENT_TYPE 0x280C
#define TAG_AUTHENTICATOR_INDEX 0x280D
#define TAG_API_VERSION 0x280E
#define TAG_AUTHENTICATOR_ASSERTION 0x280F
#define TAG_TRANSACTION_CONTENT 0x2810
#define TAG_AUTHENTICATOR_INFO 0x3811
#define TAG_SUPPORTED_EXTENSION_ID 0x2812

//Tags used in UAF Protocol
#define TAG_UAFV1_REG_ASSERTION 0x3E01
#define TAG_UAFV1_AUTH_ASSERTION 0x3E02
#define TAG_UAFV1_KRD 0x3E03
#define TAG_UAFV1_SIGNED_DATA 0x3E04
#define TAG_ATTESTATION_CERT 0x2E05
#define TAG_SIGNATURE 0x2E06
#define TAG_ATTESTATION_BASIC_FULL 0x3E07
#define TAG_ATTESTATION_BASIC_SURROGATE 0x3E08
#define TAG_KEYID 0x2E09
#define TAG_FINAL_CHALLENGE 0x2E0A
#define TAG_AAID 0x2E0B
#define TAG_PUB_KEY 0x2E0C
#define TAG_COUNTERS 0x2E0D
#define TAG_ASSERTION_INFO 0x2E0E
#define TAG_AUTHENTICATOR_NONCE 0x2E0F
#define TAG_TRANSACTION_CONTENT_HASH 0x2E10
#define TAG_EXTENSION 0x3E11
#define TAG_EXTENSION_ID 0x2E13
#define TAG_EXTENSION_DATA 0x2E14

//Key Protection
#define KEY_PROTECTION_SOFTWARE 0x01
#define KEY_PROTECTION_HARDWARE 0x02
#define KEY_PROTECTION_TEE 0x04
#define KEY_PROTECTION_SECURE_ELEMENT 0x08
#define KEY_PROTECTION_REMOTE_HANDLE 0x10

//Matcher Protection
#define MATCHER_PROTECTION_SOFTWARE 0x01
#define MATCHER_PROTECTION_TEE 0x02
#define MATCHER_PROTECTION_ON_CHIP 0x04

//Attachment hint
#define ATTACHMENT_HINT_INTERNAL 0x01
#define ATTACHMENT_HINT_EXTERNAL 0x02
#define ATTACHMENT_HINT_WIRED 0x04
#define ATTACHMENT_HINT_WIRELESS 0x08
#define ATTACHMENT_HINT_NFC 0x10
#define ATTACHMENT_HINT_BLUETOOTH 0x20
#define ATTACHMENT_HINT_NETWORK 0x40
#define ATTACHMENT_HINT_READY 0x80

//Authentication Algorithm
#define UAF_ALG_SIGN_SECP256R1_ECDSA_SHA256_RAW 0x01
#define UAF_ALG_SIGN_SECP256R1_ECDSA_SHA256_DER 0x02
#define UAF_ALG_SIGN_RSASSA_PSS_SHA256_RAW 0x03
#define UAF_ALG_SIGN_RSASSA_PSS_SHA256_DER 0x04
#define UAF_ALG_SIGN_SECP256K1_ECDSA_SHA256_RAW 0x05
#define UAF_ALG_SIGN_SECP256K1_ECDSA_SHA256_DER 0x06
#define UAF_ALG_SIGN_RSA_PKCS_SHA256_RAW 0x10


//Public key Representation Formats
#define UAF_ALG_KEY_ECC_X962_RAW 0x100
#define UAF_ALG_KEY_ECC_X962_DER 0x101
#define UAF_ALG_KEY_RSA_2048_PSS_RAW 0x102
#define UAF_ALG_KEY_RSA_2048_PSS_DER 0x103

//Authenticator Type
#define AUTHENTICATOR_TYPE_SECONDFACTOR 0x0001
#define AUTHENTICATOR_TYPE_ROAMING 0x0002
#define AUTHENTICATOR_TYPE_KEYHANDLE_INTERNAL 0x0004
#define AUTHENTICATOR_TYPE_BUILTINUI_ENROLVERIFY 0x0008
#define AUTHENTICATOR_TYPE_BUILTINUI_OPENSETTINGS 0x0010
#define AUTHENTICATOR_TYPE_EXPECT_APPID 0x0020
#define AUTHENTICATOR_TYPE_USERENROLLED 0x0040

//Transaction Confirmation Display Type
#define TRANSACTION_CONFIRMATION_DISPLAY_NOT_AVAILABLE 0x00
#define TRANSACTION_CONFIRMATION_DISPLAY_ANY 0x01
#define TRANSACTION_CONFIRMATION_DISPLAY_PRIVILEGED_SOFTWARE (TRANSACTION_CONFIRMATION_DISPLAY_ANY|0x02)
#define TRANSACTION_CONFIRMATION_DISPLAY_DISPLAY_TEE (TRANSACTION_CONFIRMATION_DISPLAY_ANY|0x04)
#define TRANSACTION_CONFIRMATION_DISPLAY_HARDWARE (TRANSACTION_CONFIRMATION_DISPLAY_ANY|0x08)
#define TRANSACTION_CONFIRMATION_DISPLAY_REMOTE (TRANSACTION_CONFIRMATION_DISPLAY_ANY|0x10)

//Transaction Confirmation Display Content Type
#define TRANSACTION_CONFIRMATION_DISPLAY_CONTENT_TYPE_TEXT "text/plain"
#define TRANSACTION_CONFIRMATION_DISPLAY_CONTENT_TYPE_IMAGE "image/png"

//Authenticator Modes
#define AUTHENTICATION_MODE_USER_EXPLICITLY_VERIFIED 0x01
#define AUTHENTICATION_MODE_TRANSACTION_CONTENT_VERIFIED 0x02

//User Verify Methods
#define USER_VERIFY_PRESENCE 0x01
#define USER_VERIFY_FINGERPRINT 0x02
#define USER_VERIFY_PASSCODE 0x04
#define USER_VERIFY_VOICEPRINT 0x08
#define USER_VERIFY_FACEPRINT 0x10
#define USER_VERIFY_LOCATION 0x20
#define USER_VERIFY_EYEPRINT 0x40
#define USER_VERIFY_PATTERN 0x80
#define USER_VERIFY_HANDPRINT 0x100
#define USER_VERIFY_NONE 0x200
#define USER_VERIFY_ALL 0x400

//Status Code
#define UAF_CMD_STATUS_OK 0x0
#define UAF_CMD_STATUS_ERR_UNKNOWN 0x01
#define UAF_CMD_STATUS_ACCESS_DENIED 0x02
#define UAF_CMD_STATUS_USER_NOT_ENROLLED 0x03
#define UAF_CMD_STATUS_CANNOT_RENDER_TRANSACTION_CONTENT 0x04
#define UAF_CMD_STATUS_USER_CANCELLED 0x05
#define UAF_CMD_STATUS_CMD_NOT_SUPPORTED 0x06
#define UAF_CMD_STATUS_ATTESTATION_NOT_SUPPORTED 0x07

//Status Code - Additional Values
#define CSFIDO_CMD_STATUS_ENROL_SUCCESS 0x1
#define CSFIDO_CMD_STATUS_VERIFY_SUCCESS 0x2

// NEW TAG

//BIO HSM Operation Tag in Extension - CROSSCERT
#define TAG_BIOHSMV1_SIGNED_DATA 0x0003
#define TAG_BIOHSMV1_SIGNED_DATA_RESP 0x0004

#define TAG_BIOHSM_CERT_STORE 0x8100
#define TAG_BIOHSM_CERT_LIST      0x8101
#define TAG_BIOHSM_CERT_DELETE    0x8102
#define TAG_BIOHSM_CERT_CHANGE_PASSWORD 0x8103

//Tag Used in BIO HSM - CROSSCERT
#define TAG_BIOHSM_SIGN_CERT 0x0001
#define TAG_BIOHSM_SIGN_PRIKEY 0x0002
#define TAG_BIOHSM_KM_CERT 0x0010
#define TAG_BIOHSM_KM_PRIKEY 0x0011
#define TAG_BIOHSM_PASSWORD  0x0050
#define TAG_BIOHSM_RESULT    0x0080
#define TAG_BIOHSM_SIGNED_DATA 0x0110
#define TAG_BIOHSM_STATUS_CODE 0x0120
#define TAG_BIOHSM_PLAIN_TEXT 0x0130
#define TAG_BIOHSM_CERT_IDX  0x0008
#define TAG_BIOHSM_CERT_LIST_COUNT 0x0003

//Status Tag Used in BIO HSM - CROSSCERT
#define TAG_OK 0x01
#define TAG_FAIL 0x02

#define ID_BIOHSM_CERTIFICATE "BIOHSM_CERTIFICATE"
#define ID_BIO_TYPE "BIO_TYPE"
#define ID_BIOHSM_SIGNED_DATA "BIOHSM_SIGNED_DATA"
#define ID_BIOHSM_CERT_IDX "BIOHSM_CERT_IDX"
#define ID_BIOHSM_CERT_MODE "BIOHSM_CERT_MODE"
#define ID_BIOHSM_SIGNED_DATA_RESP "BIOHSM_SIGNED_DATA_RESP"

#define AUTHENTICATOR_VERSION 0x00
#define SIGNATURE_ALG_AND_ENCODING UAF_ALG_SIGN_SECP256K1_ECDSA_SHA256_RAW
#define PUBLICKEY_ALG_AND_ENCODING UAF_ALG_KEY_ECC_X962_RAW

#define SHA256_DIGEST_LENGTH 32
typedef struct {
    unsigned short AuthenticatorType;
    unsigned char MaxKeyHandles;
    unsigned int UserVerification;
    unsigned short KeyProtection;
    unsigned short MatcherProtection;
    unsigned short TransactionConfirmationDisplay;
    unsigned short AuthenticationAlg;
} __attribute__ ((__packed__)) AUTHENTICATOR_METADATA;

typedef struct {
    unsigned short AuthenticatorVersion;
    unsigned char AuthenticationMode;
    unsigned short SignatureAlgAndEncoding;
    unsigned short PublicKeyAlgAndEncoding;
} __attribute__ ((__packed__)) ASSERTION_INFO_REGISTER;

typedef struct {
    unsigned short AuthenticatorVersion;
    unsigned char AuthenticationMode;
    unsigned short SignatureAlgAndEncoding;
} __attribute__ ((__packed__)) ASSERTION_INFO_SIGN;

typedef struct {
    unsigned char KHAccessToken[32];
    unsigned char privateKey[2000];
    unsigned char username[128];
    unsigned char usernameSize;
    unsigned short privateKeySize;
    unsigned short fidoType;
    unsigned char VIDRandom[64];
    unsigned short VIDRandomSize;
} __attribute__ ((__packed__)) RAWKEYHANDLE;

typedef struct {
    unsigned int signatureCounter;
    unsigned int registrationCounter;
} __attribute__ ((__packed__)) ASSERTION_INFO_REGISTER_COUNTERS;

typedef struct {
    unsigned int signatureCounter;
} __attribute__ ((__packed__)) ASSERTION_INFO_SIGN_COUNTER;

//FIDO TYPE
#define TYPE_FIDO 0
#define TYPE_KISA 1
#define TYPE_PUBLISH 2

#endif /* core_common_h */
